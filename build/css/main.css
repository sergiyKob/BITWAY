/* Base */
html {
  box-sizing: border-box;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

ul,
ol {
  padding: 0;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  display: block;
  object-fit: cover;
  height: auto;
}

input,
button,
textarea,
select {
  font: inherit;
  border: none;
  outline: transparent;
}

a {
  text-decoration: none;
  color: inherit;
  outline: transparent;
}

button {
  padding: 0;
  background: none;
  cursor: pointer;
  outline: transparent;
}

address,
cite {
  font-style: normal;
}

legend {
  display: table;
  float: left;
  margin: 0;
  padding: 0;
  width: 100%;
}
legend + * {
  clear: both;
}

fieldset {
  border: 0;
  padding: 0.01em 0 0 0;
  margin: 0;
  min-width: 0;
}

body:not(:-moz-handler-blocked) fieldset {
  display: table-cell;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

:root {
  --font-main: "Jost", serif;
  --font-second: "Playfair Display", serif;
  --page-bg: var(--white-500);
  --text-color: var(--dark-500);
  --font-size: 16px;
  --line-height: 1.4;
  --font-weight: 400;
  --container-width: 1170px;
  --container-padding: 15px;
  --primary-500: #3e54eb;
  --secondary-500: #a3d139;
  --tertiary-500: #b21589;
  --dark-500: #0f1015;
  --gray-500: #a4a6ac;
  --light-500: #d9e1e1;
  --white-500: #fff;
  --primary-100: #d6dbfb;
  --primary-200: #afb7f1;
  --primary-300: #8694f5;
  --primary-400: #6e7ff4;
  --primary-600: #2c42dc;
  --primary-700: #243acb;
  --primary-800: #1225a9;
  --primary-900: #0c1d8d;
  --primary-90: rgba(62, 84, 235, 0.9);
  --primary-80: rgba(62, 84, 235, 0.8);
  --primary-20: rgba(62, 84, 235, 0.2);
  --primary-10: rgba(62, 84, 235, 0.1);
  --primary-5: rgba(62, 84, 235, 0.05);
  --secondary-100: #e1f1bc;
  --secondary-200: #cee993;
  --secondary-300: #bcde6b;
  --secondary-400: #afd751;
  --secondary-600: #97bd33;
  --secondary-700: #88a52a;
  --secondary-800: #798d21;
  --secondary-900: #626615;
  --secondary-90: rgba(163, 209, 57, 0.9);
  --secondary-80: rgba(163, 209, 57, 0.8);
  --secondary-20: rgba(163, 209, 57, 0.2);
  --secondary-10: rgba(163, 209, 57, 0.1);
  --secondary-5: rgba(163, 209, 57, 0.05);
  --tertiary-100: #f0b0d9;
  --tertiary-200: #e67bc2;
  --tertiary-300: #d846ab;
  --tertiary-400: #cd0d9b;
  --tertiary-600: #af0a87;
  --tertiary-700: #9b0982;
  --tertiary-800: #8a087c;
  --tertiary-900: #6c0772;
  --tertiary-90: rgba(178, 21, 137, 0.9);
  --tertiary-80: rgba(178, 21, 137, 0.8);
  --tertiary-20: rgba(178, 21, 137, 0.2);
  --tertiary-10: rgba(178, 21, 137, 0.1);
  --tertiary-5: rgba(178, 21, 137, 0.05);
  --dark-90: rgba(15, 16, 21, 0.9);
  --dark-80: rgba(15, 16, 21, 0.8);
  --dark-20: rgba(15, 16, 21, 0.2);
  --dark-10: rgba(15, 16, 21, 0.1);
  --dark-5: rgba(15, 16, 21, 0.05);
  --gray-90: rgba(164, 166, 172, 0.9);
  --gray-80: rgba(164, 166, 172, 0.8);
  --gray-20: rgba(164, 166, 172, 0.2);
  --gray-10: rgba(164, 166, 172, 0.1);
  --gray-5: rgba(164, 166, 172, 0.05);
  --light-90: rgba(217, 225, 225, 0.9);
  --light-80: rgba(217, 225, 225, 0.8);
  --light-20: rgba(217, 225, 225, 0.2);
  --light-10: rgba(217, 225, 225, 0.1);
  --light-5: rgba(217, 225, 225, 0.05);
  --white-90: rgba(255, 255, 255, 0.9);
  --white-80: rgba(255, 255, 255, 0.8);
  --white-20: rgba(255, 255, 255, 0.2);
  --white-10: rgba(255, 255, 255, 0.1);
  --white-5: rgba(255, 255, 255, 0.05);
  --color-option-1: #30be82;
  --color-option-2: #30beb6;
  --color-option-3: #5d30be;
  --color-option-4: #304fbe;
  --rounded-xs: 5px;
  --rounded-sm: 10px;
  --rounded-md: 12px;
  --rounded-lg: 16px;
  --rounded-full: 100%;
  --transition: 0.2s ease-in-out;
}

.dark {
  --page-bg: #252526;
  --text-color: #fff;
}

@font-face {
  font-family: Jost;
  font-display: swap;
  src: url("../fonts/Jost-Bold.woff2") format("woff2"), url("../fonts/Jost-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: PlayfairDisplay;
  font-display: swap;
  src: url("../fonts/PlayfairDisplay-Regular.woff2") format("woff2"), url("../fonts/PlayfairDisplay-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: PlayfairDisplay;
  font-display: swap;
  src: url("../fonts/PlayfairDisplay-Bold.woff2") format("woff2"), url("../fonts/PlayfairDisplay-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: Jost;
  font-display: swap;
  src: url("../fonts/Jost-Regular.woff2") format("woff2"), url("../fonts/Jost-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
html,
body,
.wrapper {
  height: 100%;
}

html {
  scroll-behavior: smooth;
  scrollbar-gutter: stable;
}

body {
  font-family: var(--font-main);
  background-color: var(--page-bg);
  color: var(--text-color);
  font-size: var(--font-size);
  line-height: var(--line-height);
  font-weight: var(--font-weight);
}

.wrapper {
  display: flex;
  flex-direction: column;
}

.header,
.footer {
  flex-grow: 0;
}

.main {
  flex-grow: 1;
}

.container {
  margin: 0 auto;
  padding: 0 var(--container-padding);
  max-width: var(--container-width);
  width: 100%;
}

.container-full {
  padding: 0 var(--container-padding);
  max-width: 100%;
}

.container-left-50 {
  padding: 0 var(--container-padding);
  max-width: 50%;
}
@media (max-width: 576px) {
  .container-left-50 {
    max-width: 100%;
  }
}

.container-right-50 {
  padding: 0 var(--container-padding);
  max-width: 50%;
  margin-left: auto;
}
@media (max-width: 576px) {
  .container-right-50 {
    max-width: 100%;
  }
}

.container-right {
  padding-left: calc((100% - var(--container-width)) / 2 + var(--container-padding));
}
@media (max-width: 1024px) {
  .container-right {
    padding-left: var(--container-padding);
  }
}

.container-left {
  padding-right: calc((100% - var(--container-width)) / 2 + var(--container-padding));
}
@media (max-width: 1024px) {
  .container-left {
    padding-right: var(--container-padding);
  }
}

.container-half-left {
  padding-right: calc((100% - var(--container-width)) / 2 + var(--container-width) / 2);
  padding-left: calc((100% - var(--container-width)) / 2 + var(--container-padding));
}
@media (max-width: 1024px) {
  .container-half-left {
    padding-left: var(--container-padding);
  }
}
@media (max-width: 576px) {
  .container-half-left {
    padding: 0 var(--container-padding);
  }
}

.container-half-right {
  padding-left: calc((100% - var(--container-width)) / 2 + var(--container-width) / 2);
  padding-right: calc((100% - var(--container-width)) / 2 + var(--container-padding));
}
@media (max-width: 1024px) {
  .container-half-right {
    padding-right: var(--container-padding);
  }
}
@media (max-width: 576px) {
  .container-half-right {
    padding: 0 var(--container-padding);
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.no-scroll {
  overflow-y: hidden;
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 30px;
}

.hidden-scrollbar::-webkit-scrollbar {
  width: 0;
}

.custom-scrollbar::-webkit-scrollbar {
  width: 2px;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  border-radius: 0;
  background-color: gray;
}
.custom-scrollbar::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.2);
  border-radius: 0;
  background-color: silver;
}

.link-full::before {
  content: "";
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 5;
}

.hover-underline {
  position: relative;
}
.hover-underline::after {
  content: "";
  display: block;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 1px;
  background-color: #000;
  opacity: 0;
  visibility: hidden;
  transition: opacity var(--transition), visibility var(--transition);
}
@media (any-hover: hover) {
  .hover-underline:hover::after {
    opacity: 1;
    visibility: visible;
  }
}

/* components */
<<<<<<< HEAD
@media (max-width: 768px) {
  .nav {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 99;
    padding-top: 60px;
    padding-bottom: 40px;
    background-color: #8ccae6;
    overflow-y: auto;
    transform: translate3D(0, -100%, 0);
    transition: transform 0.5s cubic-bezier(0.455, 0.03, 0.515, 0.955);
  }
  .nav.is-open {
    transform: translateZ(0);
  }
}
=======
.title {
  font-weight: 700;
}
.title--xl {
  font-size: 60px;
}
.title--lg {
  font-size: 40px;
}
.title--md {
  font-size: 24px;
}
.title--sm {
  font-size: 20px;
}

>>>>>>> features
.nav__list {
  display: flex;
  align-items: center;
  gap: 30px;
}
@media (max-width: 768px) {
  .nav__list {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    font-size: 28px;
  }
}
.nav__link {
  transition: color var(--transition);
}
@media (any-hover: hover) {
  .nav__link:hover {
    color: var(--primary-500);
  }
}
.nav__link--active {
  color: var(--primary-500);
}

.link {
  display: inline-block;
  line-height: 1;
  padding: 5px 10px;
  background-color: lightcoral;
  border-radius: 8px;
  transition: box-shadow var(--transition), color var(--transition), opacity var(--transition), background-color var(--transition);
}
.link:focus-visible {
  box-shadow: 0 0 0 3px var(--accent-30);
}
.link:active {
  opacity: 0.75;
}

.burger {
  --burger-color: var(--dark-500);
  --burger-color-focus: rgba(0, 0, 0, 0.3);
  --burger-focus-stroke-width: 3px;
  --burger-line-width: 30px;
  --burger-line-height: 1.5px;
  --burger-border-radius: 5px;
  display: none;
}
@media (max-width: 768px) {
  .burger {
    display: block;
    position: relative;
    z-index: 100;
    flex-shrink: 0;
    width: 44px;
    height: 44px;
    border-radius: var(--burger-border-radius);
    transition: box-shadow 0.2s;
  }
  .burger:focus-visible {
    box-shadow: 0px 0px 0px var(--burger-focus-stroke-width) var(--burger-color-focus);
  }
  .burger__line {
    position: absolute;
    top: 20px;
    left: 50%;
    background-color: var(--burger-color);
    width: var(--burger-line-width);
    height: var(--burger-line-height);
    transform: translateX(-50%);
    transition: transform 0.2s;
    border-radius: 30px;
  }
  .burger__line::before, .burger__line::after {
    content: "";
    position: absolute;
    background-color: var(--burger-color);
    width: var(--burger-line-width);
    height: var(--burger-line-height);
    right: 0;
    transition: 0.2s;
    border-radius: 30px;
  }
  .burger__line::before {
    top: 10px;
  }
  .burger__line::after {
    bottom: 10px;
  }
  .burger.is-active .burger__line {
    background-color: transparent;
  }
  .burger.is-active .burger__line::before {
    transform: rotate(-45deg);
    top: 0;
  }
  .burger.is-active .burger__line::after {
    transform: rotate(45deg);
    bottom: 0;
  }
}

.mobile-nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 99;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding-top: 40px;
  padding-bottom: 40px;
  background-color: #8ccae6;
  overflow-y: auto;
  transform: translate3D(0, -100%, 0);
  transition: transform 0.5s cubic-bezier(0.455, 0.03, 0.515, 0.955);
}
.mobile-nav.is-open {
  transform: translateZ(0);
}
.mobile-nav__list {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 20px;
  font-size: 28px;
}
.mobile-nav__link {
  color: #fff;
}

.icon {
  width: 24px;
  height: 24px;
  flex-shrink: 0;
  fill: currentColor;
  pointer-events: none;
  transition: fill var(--transition), stroke var(--transition), transform var(--transition);
}
.icon--heart, .icon--share {
  fill: transparent;
  stroke: var(--dark-500);
}

.btn {
  display: inline-block;
  font-size: inherit;
  font-weight: inherit;
  line-height: 1;
  text-align: center;
  border-radius: var(--rounded-sm);
  transition: background-color var(--transition), box-shadow var(--transition), opacity var(--transition), color var(--transition);
  cursor: pointer;
}
.btn:focus-visible {
  box-shadow: 0 0 0 3px var(--accent-30);
}
.btn:active {
  opacity: 0.8;
}
.btn--primary {
  background-color: var(--primary-500);
  color: var(--white-500);
}
.btn--outline {
  color: var(--dark-500);
  border-radius: var(--rounded-xs);
  border: 1px solid var(--gray-20);
}
.btn--with-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  column-gap: 10px;
}
.btn--only-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0;
}
.btn--xl {
  min-height: 56px;
  min-width: 56px;
  padding: 16px;
}
.btn--lg {
  min-height: 50px;
  min-width: 50px;
  padding: 13px;
}
.btn--md {
  min-height: 40px;
  min-width: 40px;
  padding: 10px;
  font-size: 14px;
}
.btn--md svg {
  width: 20px;
  height: 20px;
}
.btn--sm {
  min-height: 34px;
  min-width: 34px;
  padding: 8px;
  font-size: 12px;
}
.btn--sm svg {
  width: 18px;
  height: 18px;
}
.btn--full {
  width: 100%;
}

.social {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 16px;
}
.social__link {
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--white-500);
  border-radius: var(--rounded-full);
  border: 1px solid transparent;
  transition: border var(--transition), background-color var(--transition), opacity var(--transition);
}
.social__link svg {
  fill: var(--primary-500);
}
@media (any-hover: hover) {
  .social__link:hover {
    border: 1px solid var(--white-500);
    background-color: transparent;
  }
  .social__link:hover svg {
    fill: var(--white-500);
  }
}
.social__link:active {
  opacity: 0.7;
}

.logo {
  flex-shrink: 0;
}
.logo__img {
  width: clamp(6.25rem, 4.917rem + 5.93vw, 9.25rem);
}

/* Blocks */
.card-features {
  max-width: 500px;
  padding-bottom: 20px;
  border-bottom: 1px solid var(--gray-20);
}
.card-features__icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  background-color: var(--primary-5);
  margin-bottom: 16px;
  border-radius: var(--rounded-sm);
}
.card-features__icon svg {
  fill: transparent;
  stroke: var(--primary-500);
}
.card-features__title {
  margin-bottom: 5px;
}
.card-features__descr {
  color: var(--gray-500);
}

.box {
  padding: 30px;
  background-color: var(--gray-5);
}

.card-product {
  max-width: 360px;
  background-color: var(--white-500);
  padding: 20px;
  border-radius: var(--rounded-lg);
  box-shadow: 0 8px 8px -4px rgba(16, 24, 40, 0.02), 0 10px 40px -4px rgba(16, 24, 40, 0.02);
}
.card-product__top {
  position: relative;
  margin-bottom: 16px;
}
.card-product__img {
  border-radius: var(--rounded-md);
}
.card-product__img img {
  background-color: var(--light-500);
  border-radius: var(--rounded-md);
}
.card-product__favourite {
  position: absolute;
  top: 16px;
  right: 16px;
  z-index: 2;
  width: 32px;
  height: 32px;
  background: var(--white-80);
  border-radius: var(--rounded-xs);
  backdrop-filter: blur(20px);
}
.card-product__favourite svg {
  width: 20px;
  height: 20px;
}
.card-product__title {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  font-family: var(--font-second);
  margin-bottom: 10px;
}
.card-product__price {
  font-size: 20px;
  margin-bottom: 10px;
}
.card-product__descr {
  color: var(--gray-500);
  margin-bottom: 16px;
}
.card-product__list {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 20px;
  margin-bottom: 16px;
}
.card-product__item {
  position: relative;
  padding-left: 34px;
}
.card-product__item::before {
  content: "";
  display: block;
  position: absolute;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  left: 0;
  top: 0;
  width: 24px;
  height: 24px;
}
.card-product__item--bed::before {
  background-image: url("./../img/icons/bed.svg");
}
.card-product__item--bath::before {
  background-image: url("./../img/icons/bath.svg");
}
.card-product__item--auto::before {
  background-image: url("./../img/icons/auto.svg");
}
.card-product__bottom {
  display: grid;
  grid-template-columns: 34px 1fr 1fr;
  align-items: center;
  gap: 10px;
  padding-top: 16px;
  border-top: 1px solid var(--gray-20);
}
.card-product__name {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.card-product__actions {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 8px;
}
.footer {
  background-color: var(--primary-500);
  color: var(--white-500);
}
.footer__top {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 2fr;
  gap: 10px;
  padding: 30px 0;
}
@media (max-width: 768px) {
  .footer__top {
    grid-template-columns: repeat(2, 1fr);
    row-gap: 30px;
  }
}
@media (max-width: 576px) {
  .footer__top {
    grid-template-columns: repeat(1, 1fr);
    padding: 20px 0;
    row-gap: 20px;
  }
}
.footer__logo {
  display: inline-block;
  margin-bottom: 20px;
}
@media (max-width: 576px) {
  .footer__logo {
    margin-bottom: 10px;
  }
  .footer__logo img {
    width: 100px;
  }
}
.footer__descr {
  max-width: 326px;
  text-wrap: balance;
}
.footer__title {
  font-size: 18px;
  font-weight: 700;
  margin-bottom: 20px;
}
@media (max-width: 576px) {
  .footer__title {
    margin-bottom: 10px;
  }
}
.footer__list {
  display: flex;
  flex-direction: column;
  gap: 16px;
}
@media (max-width: 1024px) {
  .footer__list {
    gap: 0;
  }
}
.footer__link {
  display: inline-block;
  border-bottom: 1px solid transparent;
  transition: border-bottom var(--transition), color var(--transition);
}
@media (max-width: 1024px) {
  .footer__link {
    padding: 8px 0;
  }
}
@media (any-hover: hover) {
  .footer__link:hover {
    border-bottom: 1px solid var(--white-500);
  }
}
.footer__link:active {
  color: var(--white-80);
}
.footer__link--address {
  margin-bottom: 16px;
}
.footer__bottom {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
  padding: 20px 0 30px;
  text-align: center;
  border-top: 1px solid var(--white-20);
}
<<<<<<< HEAD
<<<<<<< HEAD
@media (max-width: 768px) {
  .footer__bottom {
    flex-direction: column;
    justify-content: center;
    gap: 10px;
    padding-bottom: 20px;
  }
}
.footer__privacy {
  display: flex;
  align-items: center;
  gap: 30px;
}

.header {
  background-color: var(--white-500);
  padding: 20px 0;
}
@media (max-width: 576px) {
  .header {
    padding: 10px 0;
  }
}
.header__container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
}
@media (max-width: 576px) {
  .header__container {
    gap: 10px;
  }
}
.header__login {
  min-width: 100px;
}
@media (max-width: 768px) {
  .header__login {
    min-height: 40px;
    min-width: 70px;
    margin-left: auto;
  }
}
@media (max-width: 576px) {
  .header__login {
    padding: 8px 13px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> features
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> card-product
